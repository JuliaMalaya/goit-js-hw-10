{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport izitoast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nlet selectedDate;\nstartBtn.addEventListener('click', runTimer);\nstartBtn.disabled = true;\n\nconst datePicker = flatpickr(dateTimePicker, {\n  enableTime: true,\n  minuteIncrement: 1,\n  time_24hr: true,\n  defaultDate: new Date(),\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0].getTime();   \n      if (selectedDate < Date.now()) {\n        startBtn.disabled = true;\n        izitoast.error({\n            title: 'Error',\n            message: 'Please choose a date in the future',\n            position: 'topRight',\n        });\n    } else {\n        startBtn.disabled = false;\n      }\n  }, \n});\n\nfunction runTimer() {\n    const timerInterval = setInterval(() => {\n        const timeDiff = selectedDate - Date.now();\n        \n        if (timeDiff > 0) {\n          const { days, hours, minutes, seconds } = convertMs(timeDiff);\n          \n            daysElement.textContent = addLeadingZero(days);\n            hoursElement.textContent = addLeadingZero(hours);\n            minutesElement.textContent = addLeadingZero(minutes);\n            secondsElement.textContent = addLeadingZero(seconds);\n\n            startBtn.disabled = true;\n            dateTimePicker.disabled = true;\n        } else {\n            clearInterval(timerInterval);\n        }\n    }, 1000);\n};\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n};"],"names":["convertMs","ms","days","hours","minutes","seconds","dateTimePicker","startBtn","daysElement","hoursElement","minutesElement","secondsElement","selectedDate","runTimer","flatpickr","selectedDates","izitoast","timerInterval","timeDiff","addLeadingZero","value"],"mappings":"0IAKA,SAASA,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EACJL,EAAS,iBAAiB,QAASM,CAAQ,EAC3CN,EAAS,SAAW,GAEDO,EAAUR,EAAgB,CAC3C,WAAY,GACZ,gBAAiB,EACjB,UAAW,GACX,YAAa,IAAI,KACjB,QAAQS,EAAe,CACrBH,EAAeG,EAAc,CAAC,EAAE,QAAO,EACjCH,EAAe,KAAK,OACtBL,EAAS,SAAW,GACpBS,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,UACtB,CAAS,GAEDT,EAAS,SAAW,EAEzB,CACH,CAAC,EAED,SAASM,GAAW,CAChB,MAAMI,EAAgB,YAAY,IAAM,CACpC,MAAMC,EAAWN,EAAe,KAAK,IAAG,EAExC,GAAIM,EAAW,EAAG,CAChB,KAAM,CAAE,KAAAhB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUkB,CAAQ,EAE1DV,EAAY,YAAcW,EAAejB,CAAI,EAC7CO,EAAa,YAAcU,EAAehB,CAAK,EAC/CO,EAAe,YAAcS,EAAef,CAAO,EACnDO,EAAe,YAAcQ,EAAed,CAAO,EAEnDE,EAAS,SAAW,GACpBD,EAAe,SAAW,EACtC,MACY,cAAcW,CAAa,CAElC,EAAE,GAAI,CACX,CAEA,SAASE,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}